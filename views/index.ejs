<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Todo list</title>

    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">

  </head>
  <body>
    <div class="container">
        <div class="row">
            <div class="col-lg-2"></div>
            <div class="col-lg-8">

                <form action="" id="form">
                    <div class="form-group">
                        <label for="inputTodo">Must do</label>
                        <input type="text" class="form-control" id="inputTodo" name="todo" placeholder="Must do...">
                        <button id="createTodo" class="btn btn-primary">Create todo</button>
                    </div>
                </form>

            </div>
            <div class="col-lg-2"></div>
        </div>

        <div class="row">
            <div class="col-lg-2"></div>
            <div class="col-lg-8">
                <div class="alert" id="message" role="alert"></div>
            </div>
            <div class="col-lg-2"></div>
        </div>
          
        <div class="row">
            <div class="col-lg-2"></div>
            <div class="col-lg-8">
                <div class="list-group" id="display">
                    
                </div>
            </div>
            <div class="col-lg-2"></div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
    <script>
        $(document).ready(() => {
            const display = $('#display');
            const form = $('#form');
            const todoInput = $('#inputTodo');
            const message = $('#message');

            message.hide();

            const resetInput = () => {
                todoInput.val('')
            }

            const showMessage = (flag, msg) => {
                if(flag) {
                    message.removeClass('alert-danger')
                    message.addClass('alert-success')
                    message.html(msg)
                    message.show()
                } else {
                    message.removeClass('alert-success')
                    message.addClass('alert-danger')
                    message.html(msg)
                    message.show()
                }
                setTimeout(() => {
                    message.hide()
                }, 2000)
            }
          
            const getTodos = () => {
                fetch('/getTodos', {method : "GET"}).then((response) => {
                    return response.json()
                }).then((data) => {
                    displayTodos(data)
                })
            }

            getTodos();

            form.submit((e) => {
                e.preventDefault();
                fetch('/createTodo', {
                    method : "post",
                    body : JSON.stringify({ todo : todoInput.val() }),
                    headers : {
                        "Content-Type" : "text/plain"
                    }
                }).then((response) => {
                    return response.json()
                }).then((data) => {
                    if(!data.error) {
                        if(data.result.ok == 1 ) {
                            let ids = buildIDS(data.documents);
                            display.append(buildTemplate(data.documents, ids))
                            editTodo(data.documents, ids.todoID, ids.editID);
                            deleteTodo(data.documents, ids.listItemID, ids.deleteID);
                            showMessage(true, data.msg)
                        }
                    } else {
                        showMessage(false, data.error.message)
                    }
                })
                resetInput();
            })

            const editTodo = (todo, todoID, editID) => {
                let editBtn = $(`#${editID}`);
                let todoElem = $(`#${todoID}`)
                editBtn.click(() => {
                    fetch(`/${todo._id}`, {
                        method : 'put',
                        body : JSON.stringify({ todo : todoInput.val() }),
                        headers : {
                            "Content-Type" : "text/plain"
                        }
                    }).then((response) => {
                        return response.json();
                    }).then((data) => {
                        console.log(data)
                        if(!data.error) {
                            if(data.result.ok == 1 ) {
                                todoElem.html(data.result.value.todo);
                                resetInput();
                                showMessage(true, data.msg)
                            }
                        } else {
                            showMessage(false, data.error.message)
                        }
                        
                    })
                })
            }

            const deleteTodo = (todo, listItemID, deleteID) => {
                let deleteBtn = $(`#${deleteID}`);
                deleteBtn.click(() => {
                    fetch(`/${todo._id}`, {
                        method : 'delete'
                    }).then((response) => {
                        return response.json();
                    }).then((data) => {
                        if(!data.error) {
                            if(data.result.ok == 1) {
                                $(`#${listItemID}`).remove();
                                showMessage(true, data.msg)
                            }
                        } else {
                            showMessage(false, data.error.message)
                        }
                    })
                })
            }

            const buildIDS = (todo) => {
                return {
                    editID : "edit_" + todo._id,
                    deleteID : "delete_" + todo._id, 
                    listItemID : 'list_item_' + todo._id,
                    todoID : 'todo_' + todo._id
                }
            }

            const buildTemplate = (todo, ids) => {
                return `<li class="list-group-item" id="${ids.listItemID}">
                            <div class="row">
                                <div class="col-md-4" id="${ids.todoID}">${todo.todo}</div>
                                <div class="col-md-4"></div>
                                <div class="col-md-4">
                                    <button type="button" class="btn btn-secondary" id="${ids.editID}">Edit</button>
                                    <button type="button" class="btn btn-danger" id="${ids.deleteID}">Delete</button>    
                                </div>
                            </div>
                        </li>`;
            }

            const displayTodos = (data) => {
                data.forEach((todo) => {
                    let ids = buildIDS(todo);
                    display.append(buildTemplate(todo, ids));
                    editTodo(todo, ids.todoID, ids.editID);
                    deleteTodo(todo, ids.listItemID, ids.deleteID);
                })
            }
        })
    </script>
  </body>
</html>